'use strict'

/*
Объясните значение "this"
В представленном ниже коде мы намерены вызвать obj.go() метод 4 раза подряд.

Но вызовы (1) и (2) работают иначе, чем (3) и (4). Почему?

let obj, method;

obj = {
  go: function() { alert(this); }
};

obj.go();               // (1) [object Object]

(obj.go)();             // (2) [object Object]

(method = obj.go)();    // (3) undefined

(obj.go || obj.stop)(); // (4) undefined
 */

/* 1. this ссылается на объект перед точкой.
   2. аналогично первой функции, круглые скобки не помешают вызову метода,
    ведь изначально указыается объект, а затем метод.
   3. method сработает как отдельная функция, без объекта, соответственно this не перетрется.
   4. все другие операторы (кроме вызова) превращают метод в обычную функцию, this уже не будет видеть объект.
 */
